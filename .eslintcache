[{"/Users/connorhanson/Documents/react-page/react-page/src/index.js":"1","/Users/connorhanson/Documents/react-page/react-page/src/App.js":"2","/Users/connorhanson/Documents/react-page/react-page/src/reportWebVitals.js":"3"},{"size":500,"mtime":1609878765323,"results":"4","hashOfConfig":"5"},{"size":8829,"mtime":1610424168814,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609878765324,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"11vn5hb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/connorhanson/Documents/react-page/react-page/src/index.js",[],["16","17"],"/Users/connorhanson/Documents/react-page/react-page/src/App.js",["18","19","20","21","22","23","24","25","26","27","28"],"import logo from './logo.svg';\nimport hacker from './hacker.jpg';\nimport './App.css';\n\nvar React = require('react');\n\nclass DownArrow extends React.Component {\n  // props contains what we scroll to\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // move down to next slide\n  handleClick(nextY) {\n    window.scroll({\n       top: nextY,\n        left: 0,\n        behavior: 'smooth'\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"scroll-arrow\" onClick={() => this.handleClick(this.props.nextY)}>\n          <img width=\"32\"\n          alt=\"Arrow-down\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/2/24/White_arrow_down.svg\"/>\n      </div>\n    );\n  }\n}\n\nclass TypedText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // TODO: replace words\n    this.state = {\n      animate: false,\n      currText:\"L\",\n      //finalText: \"Web Developer.\\nComputer Science Major.\\nFrench Minor.\",\n      finalText: \"Connor Hanson\",\n      charCounter: 0\n    }\n  }\n\n  // begin animation when component loads to DOM\n  componentDidMount() {\n    this.animateTextAndBar();\n  }\n\n\n  // TODO animate typing bar\n  animateTextAndBar() {\n\n    let finalText = this.state.finalText;\n    let charCounter = this.state.charCounter;\n    let element = document.getElementById('typing-text');\n    var newChar;\n\n    requestAnimationFrame(function animate() {\n      newChar = finalText.charAt(charCounter);\n      \n      // controls typing speed\n      setTimeout(() => {\n        let cursor = document.getElementById(\"type-cursor\");\n        if (cursor) {\n          cursor.parentElement.removeChild(cursor);\n          element.innerHTML += newChar;\n          element.appendChild(cursor);\n        } else {\n          element.innerHTML += newChar;\n        }\n        \n        charCounter += 1;\n\n        // wait a few seconds\n        if (newChar == ' ' && charCounter < finalText.length) {\n          setTimeout(() => {\n            //element.innerHTML += '<br/>';\n            requestAnimationFrame(animate);\n\n          }, 500); // pause 2 seconds between lines\n        }\n        else if (charCounter < finalText.length) {\n          requestAnimationFrame(animate);\n        }\n      }, 80);\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"typing-text-container\">\n        <h1 id=\"typing-text\"><span id=\"type-cursor\">|</span></h1>\n      </div>\n    );\n  }\n}\n\n// Landing Page\nclass Welcome extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      topY: 0,\n      bottomY: window.innerHeight\n    }\n  }\n\n  onClickAboutMe() {\n    return \"\";\n  }\n\n  onClickProjects() {\n    return\"\";\n  }\n\n  onClickContactMe() {\n    return\"\";\n  }\n\n  render() {\n    return (\n\n        <header className=\"App-header\">\n\n          <div className=\"navbar\">\n            <div className=\"navbar-first col-3\" onClick={() => alert('About me')}>\n              <a>About Me</a>\n            </div>\n            <div className=\"navbar-first col-3\" onClick={() => alert('projects')}>\n              <a>Portfolio</a>\n            </div>\n            <div className=\"navbar-first col-3\" onClick={() => alert('contact')}>\n              <a>Contact Me</a>\n            </div>\n          </div>\n\n\n          {/* <h1>Connor Hanson</h1> */}\n          <TypedText />\n\n          {/* TODO: programatically adjust size based on screen size*/ }\n          <div className=\"contact-column\">\n            <div className=\"contact-bubble\">\n              <a >\n              <img width=\"32\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/3/30/Aiga_mail_inverted_nobg.svg\"></img>\n              </a>\n            </div>\n\n            <div className=\"contact-bubble\">\n              <a href=\"https://www.linkedin.com/in/connor-hanson-134b4419b\">\n              <img width=\"32\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/8/8f/LinkedIn_font_awesome.svg\"></img>\n              </a>\n            </div>\n            <div className=\"contact-bubble\">\n              <a href=\"https://github.com/connor-hanson\">\n                <img width=\"32\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/9/91/Octicons-mark-github.svg\"></img>\n              </a>\n            </div>\n\n          </div>\n\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Hello, I'm Connor. nice to meet you.\n          </p> */}\n\n          <DownArrow nextY={this.state.bottomY}/>\n\n        </header>\n    );\n  }\n}\n\nclass Intro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCard1Click = this.handleCard1Click.bind(this);\n    this.handleCard2Click = this.handleCard2Click.bind(this);\n    this.handleCard3Click = this.handleCard3Click.bind(this);\n    this.handleCardExit = this.handleCardExit.bind(this);\n\n    this.state = {\n      topY: 0,\n      bottomY: 2*window.innerHeight,\n      isBlurred: false,\n      ExpandableCard1Visible: false,\n      ExpandableCard2Visible: false,\n      ExpandableCard3Visible: false\n    }\n  }\n\n  // handle opening and closing cards\n  handleCard1Click() {\n    this.setState({\n      isBlurred:true,\n      ExpandableCard1Visible: true\n    });\n    document.getElementById(\"blur-content\").style.filter = \"blur(5px)\";\n    document.getElementById(\"ex-card-1\").style.display = \"block\";\n  }\n\n  handleCard2Click() {\n    this.setState({\n      isBlurred:true,\n      ExpandableCard2Visible: true\n    });\n    document.getElementById(\"blur-content\").style.filter = \"blur(5px)\";\n    document.getElementById(\"ex-card-2\").style.display = \"block\";\n  }\n\n  handleCard3Click() {\n    this.setState({\n      isBlurred:true,\n      ExpandableCard3Visible: true\n    });\n    document.getElementById(\"blur-content\").style.filter = \"blur(5px)\";\n    document.getElementById(\"ex-card-3\").style.display = \"block\";\n    document.getElementById(\"ex-card-3\").style.margin = \"auto\";\n  }\n\n  handleCardExit() {\n    if (this.state.isBlurred) {\n      this.setState({\n        isBlurred: false,\n        ExpandableCard1Visible: false,\n        ExpandableCard2Visible: false,\n        ExpandableCard3Visible: false\n      });\n      document.getElementById(\"blur-content\").style.filter = \"none\";\n      let hiddenCards = document.getElementsByClassName(\"expanded-card\");\n\n      // hide all cards again, so we don't need to know which is open\n      for (var i = 0; i < hiddenCards.length; ++i) {\n        hiddenCards[i].style.display = \"none\";\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"intro-page\" onClick={this.handleCardExit}>\n\n        <div id=\"blur-content\">\n          <h1>About Me</h1>\n          <p>UW Madison senior graduting with a CS major and a French certificate. I am a talented programmer with experience in a variety of languages (C, C++, Java, JS, Python, PHP, CSS, HTML) and frameworks/templating languages (React.js, Jinja2, Flask, HTML). I am a developer who likes developing both solo projects (complete freedom!!) as well as working with one or more other developers (Brings out my strengths and makes me a better dev).</p>\n\n          <p>Computer Science is my degree, but design is my <i>passione</i></p>\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <div className=\"clickable-card\" onClick={this.handleCard1Click}>\n                <h3>Languages and Skills!</h3>\n\n                <p>I know C, C++idmnsxzopdxs\n                  iukj,dmcszds\n\n                  ebdhskjnaxdes\n                  poppuhijdesxddcsib\n                  deslladfdsassfewsaxz\n                  uvhkjfdsaqdfvrgfedwsz\n                  uhkjl;[pfedsxwdfreds]\n                </p>\n              </div>\n            </div>\n\n            <div className=\"col-3\">\n              <div className=\"clickable-card\" onClick={this.handleCard2Click}>\n                <h3>Work Experience</h3>\n                <p>Pop</p>\n              </div>\n            </div>\n\n            <div className=\"col-3\">\n              <div className=\"clickable-card\" onClick={this.handleCard3Click}>\n                <h3>Hobbies 'n Things</h3>\n                <p>yuh</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"expanded-card\" id=\"ex-card-1\">Expand Dong 1</div>\n        <div className=\"expanded-card\" id=\"ex-card-2\">Expand Dong 2</div>\n        <div className=\"expanded-card\" id=\"ex-card-3\">Expand Dong 3</div>\n\n\n        <DownArrow nextY={this.state.bottomY}/>\n      </div>\n    );\n  }\n}\n\nclass Projects extends React.Component {\n  render() {\n    return (\n      <div className=\"projects-page\">\n        <p>My Projects</p>\n      </div>\n    );\n  }\n}\n\n// menu displaying areas to nav to\nclass DropMenu extends React.Component {\n  render() {\n    return \"\";\n  }\n}\n\n\n\nfunction App() {\n  return (\n  <div className=\"App\">\n    <Welcome />\n    <Intro />\n    <Projects />\n  </div>\n  );\n}\n\nexport default App;\n","/Users/connorhanson/Documents/react-page/react-page/src/reportWebVitals.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":14},{"ruleId":"38","severity":1,"message":"39","line":79,"column":21,"nodeType":"40","messageId":"41","endLine":79,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":132,"column":15,"nodeType":"44","endLine":132,"endColumn":18},{"ruleId":"42","severity":1,"message":"43","line":135,"column":15,"nodeType":"44","endLine":135,"endColumn":18},{"ruleId":"42","severity":1,"message":"43","line":138,"column":15,"nodeType":"44","endLine":138,"endColumn":18},{"ruleId":"42","severity":1,"message":"43","line":149,"column":15,"nodeType":"44","endLine":149,"endColumn":19},{"ruleId":"45","severity":1,"message":"46","line":150,"column":15,"nodeType":"44","endLine":151,"endColumn":101},{"ruleId":"45","severity":1,"message":"46","line":157,"column":15,"nodeType":"44","endLine":158,"endColumn":99},{"ruleId":"45","severity":1,"message":"46","line":163,"column":17,"nodeType":"44","endLine":164,"endColumn":100},{"ruleId":"33","severity":1,"message":"47","line":312,"column":7,"nodeType":"35","messageId":"36","endLine":312,"endColumn":15},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'hacker' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'DropMenu' is defined but never used.","no-global-assign","no-unsafe-negation"]